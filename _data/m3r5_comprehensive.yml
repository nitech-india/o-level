sets:
- duration_minutes: 120
  id: 1
  name: Comprehensive Practice Set 1 - Full Module M3-R5 (100 marks)
  questions:
  - answer: B
    choices:
      A: To draw pictures
      B: To provide step-by-step instructions to solve a problem
      C: To write poetry
      D: To compile code
      E: All of the above
    explanation: An algorithm provides step-by-step instructions to solve a problem.
    text: What is the primary purpose of an algorithm?
    topic: Introduction to Programming, Algorithm and Flowcharts to solve problems
  - answer: C
    choices:
      A: Unambiguous
      B: Finite
      C: Infinite loops
      D: Well-defined inputs and outputs
      E: All of the above
    explanation: A good algorithm should not have infinite loops; it must terminate.
    text: Which of the following is not a characteristic of a good algorithm?
  - answer: C
    choices:
      A: Rectangle
      B: Oval
      C: Diamond
      D: Circle
      E: All of the above
    explanation: A diamond is used for decision-making in flowcharts.
    text: What symbol is used for decision-making in a flowchart?
  - answer: D
    choices:
      A: Start or End
      B: Input/Output
      C: Decision
      D: Process or Operation
      E: All of the above
    explanation: A rectangle represents a process or operation in a flowchart.
    text: What does a rectangle represent in a flowchart?
  - answer: A
    choices:
      A: Oval
      B: Diamond
      C: Parallelogram
      D: Square
      E: All of the above
    explanation: An oval shape is used for the start or end of a flowchart.
    text: Which shape represents the start or end of a flowchart?
  - answer: B
    choices:
      A: Show processing steps
      B: Indicate flow of control
      C: Indicate data types
      D: Connect to databases
      E: All of the above
    explanation: Arrows in flowcharts indicate the flow of control.
    text: 'In flowcharts, arrows are used to:'
  - answer: C
    choices:
      A: They speed up typing
      B: They make code look fancy
      C: They visually represent the logic and flow of an algorithm
      D: They replace code entirely
      E: All of the above
    explanation: Flowcharts visually represent the logic and flow of an algorithm.
    text: What is the main advantage of using flowcharts in programming?
  - answer: C
    choices:
      A: A programming language
      B: A hardware device
      C: A step-by-step procedure to solve a problem
      D: A type of loop
      E: All of the above
    explanation: An algorithm is a step-by-step procedure to solve a problem.
    text: What is an algorithm?
  - answer: A
    choices:
      A: Input/Output
      B: Decision
      C: Loop
      D: Process
      E: All of the above
    explanation: A parallelogram in a flowchart represents input/output.
    text: 'In a flowchart, a parallelogram represents:'
  - answer: C
    choices:
      A: Circle
      B: Rectangle
      C: Oval
      D: Hexagon
      E: All of the above
    explanation: An oval denotes the start or end in a flowchart.
    text: What symbol in a flowchart denotes the start or end?
  - answer: E
    choices:
      A: Unambiguous
      B: Finite
      C: Well-defined inputs and outputs
      D: Efficient
      E: All of the above
    explanation: All listed options are characteristics of a good algorithm.
    text: Which of the following are characteristics of a good algorithm?
    type: multiple
  - answer: E
    choices:
      A: Oval
      B: Rectangle
      C: Diamond
      D: Parallelogram
      E: All of the above
    explanation: All listed options are flowchart symbols.
    text: Which of the following are flowchart symbols?
    type: multiple
  - choices:
    - left: Algorithm
      right: A finite sequence of well-defined, computer-implementable instructions.
    - left: Flowchart
      right: A graphical representation of an algorithm.
    - left: Pseudocode
      right: A plain language description of the steps in an algorithm.
    - left: Debugging
      right: The process of finding and fixing errors in a program.
    explanation: An algorithm is a set of instructions, a flowchart is its graphical
      representation, pseudocode is a textual description, and debugging is error-fixing.
    text: Match the algorithm/flowchart concept with its description.
    topic: Introduction to Programming, Algorithm and Flowcharts to solve problems
    type: match
  - answer: B
    choices:
      A: A snake species
      B: A high-level programming language
      C: A database system
      D: An operating system
      E: All of the above
    explanation: Python is a high-level programming language used for general-purpose
      programming.
    text: What is Python?
  - answer: A
    choices:
      A: int
      B: variable
      C: function
      D: loop
      E: All of the above
    explanation: '''int'' is a built-in data type in Python representing integers.'
    text: Which of the following is a Python data type?
  - answer: B
    choices:
      A: 2 + 3
      B: '5'
      C: '23'
      D: Error
      E: All of the above
    explanation: 2 + 3 evaluates to 5 in Python.
    text: What is the output of print(2 + 3)?
  - answer: B
    choices:
      A: ^
      B: '**'
      C: pow
      D: exp
      E: All of the above
    explanation: '''**'' is the exponentiation operator in Python.'
    text: Which operator is used for exponentiation in Python?
  - answer: B
    choices:
      A: 3.333...
      B: '3'
      C: '3.0'
      D: Error
      E: All of the above
    explanation: '''//'' is integer division; 10 // 3 gives 3.'
    text: What is the result of 10 // 3?
  - answer: B
    choices:
      A: 2name
      B: name2
      C: my-name
      D: class
      E: All of the above
    explanation: Variable names cannot start with a digit, contain hyphens, or be
      reserved keywords. 'name2' is valid.
    text: Which of the following is a valid Python variable name?
  - answer: A
    choices:
      A: HelloHelloHello
      B: Hello 3
      C: Error
      D: Hello Hello Hello
      E: All of the above
    explanation: Multiplying a string by 3 repeats it three times.
    text: What is the output of print('Hello' * 3)?
  - answer: B
    choices:
      A: Tuple
      B: List
      C: String
      D: Integer
      E: All of the above
    explanation: Lists are mutable, meaning their contents can be changed.
    text: Which data structure is mutable in Python?
  - answer: A
    choices:
      A: '4'
      B: '10'
      C: Error
      D: 1,2,3,4
      E: All of the above
    explanation: len() returns the number of elements in the list, which is 4.
    text: What is the output of len([1, 2, 3, 4])?
  - answer: B
    choices:
      A: add()
      B: append()
      C: insert()
      D: push()
      E: All of the above
    explanation: The append() method adds an element to the end of a list.
    text: Which method is used to add an element to a list?
  - answer: A
    choices:
      A: HELLO
      B: Hello
      C: hello
      D: Error
      E: All of the above
    explanation: The upper() method converts all characters to uppercase.
    text: What is the output of 'hello'.upper()?
  - answer: A
    choices:
      A: +
      B: '&'
      C: .
      D: '|'
      E: All of the above
    explanation: The '+' operator joins two strings together.
    text: Which operator is used for string concatenation?
  - answer: B
    choices:
      A: <class 'int'>
      B: <class 'float'>
      C: <class 'number'>
      D: <class 'decimal'>
      E: All of the above
    explanation: 3.14 is a floating-point number, so its type is float.
    text: What is the output of print(type(3.14))?
  - answer: A
    choices:
      A: input()
      B: get()
      C: read()
      D: scanf()
      E: All of the above
    explanation: input() reads a line from user input as a string.
    text: Which function is used to get user input in Python?
  - answer: B
    choices:
      A: 'True'
      B: 'False'
      C: '0'
      D: Error
      E: All of the above
    explanation: 0 is considered False in Python.
    text: What is the output of print(bool(0))?
  - answer: E
    choices:
      A: int
      B: float
      C: str
      D: list
      E: All of the above
    explanation: All listed options are Python data types.
    text: Which of the following are Python data types?
    type: multiple
  - answer: E
    choices:
      A: +
      B: '-'
      C: '*'
      D: /
      E: All of the above
    explanation: All listed options are valid Python operators.
    text: Which of the following are valid Python operators?
    type: multiple
  - choices:
    - left: List
      right: An ordered, mutable collection of items.
    - left: Tuple
      right: An ordered, immutable collection of items.
    - left: Dictionary
      right: An unordered collection of key-value pairs.
    - left: Set
      right: An unordered collection of unique items.
    explanation: Lists are ordered and mutable, tuples are ordered and immutable,
      dictionaries are key-value pairs, and sets are unique items.
    text: Match the Python concept with its description.
    topic: Introduction to Python, Operators, Expressions and Python Statements, Sequence
      data types
    type: match
  - answer: B
    choices:
      A: A variable
      B: A reusable block of code
      C: A data type
      D: A loop
      E: All of the above
    explanation: A function is a reusable block of code that performs a specific task.
    text: What is a function in Python?
  - answer: B
    choices:
      A: 'function my_function():'
      B: 'def my_function():'
      C: 'create my_function():'
      D: 'func my_function():'
      E: All of the above
    explanation: Functions in Python are defined using the 'def' keyword.
    text: How do you define a function in Python?
  - answer: B
    choices:
      A: To end the function
      B: To send a value back from the function
      C: To print output
      D: To create a loop
      E: All of the above
    explanation: The return statement sends a value back to the caller of the function.
    text: What is the purpose of the return statement?
  - answer: B
    choices:
      A: A variable inside the function
      B: A value passed to the function
      C: The function name
      D: The return value
      E: All of the above
    explanation: A parameter is a value passed to a function when it is called.
    text: What is a parameter in a function?
  - answer: B
    choices:
      A: 3 + 4
      B: '7'
      C: Error
      D: None
      E: All of the above
    explanation: add(3, 4) returns 7, which is printed.
    text: 'What is the output of: def add(x, y): return x + y; print(add(3, 4))?'
  - answer: B
    choices:
      A: A required parameter
      B: A parameter with a predefined value
      C: The first parameter
      D: A return value
      E: All of the above
    explanation: A default parameter has a value if no argument is provided.
    text: What is a default parameter?
  - answer: B
    choices:
      A: Hello
      B: Hello World
      C: Error
      D: None
      E: All of the above
    explanation: The default value 'World' is used, so it prints 'Hello World'.
    text: 'What is the output of: def greet(name=''World''): return f''Hello {name}'';
      print(greet())?'
  - answer: B
    choices:
      A: A type of loop
      B: A function calling itself
      C: A data structure
      D: A variable type
      E: All of the above
    explanation: Recursion is when a function calls itself.
    text: What is recursion?
  - answer: B
    choices:
      A: The first function call
      B: The condition that stops recursion
      C: The return value
      D: The function name
      E: All of the above
    explanation: The base case is the condition that ends the recursive calls.
    text: What is a base case in recursion?
  - answer: B
    choices:
      A: '5'
      B: '120'
      C: Error
      D: None
      E: All of the above
    explanation: factorial(5) computes 5*4*3*2*1 = 120.
    text: 'What is the output of: def factorial(n): return 1 if n <= 1 else n * factorial(n-1);
      print(factorial(5))?'
  - answer: B
    choices:
      A: Creating files
      B: Reading from and writing to files
      C: Deleting files
      D: Moving files
      E: All of the above
    explanation: File processing involves reading from and writing to files.
    text: What is file processing?
  - answer: B
    choices:
      A: '''w'''
      B: '''r'''
      C: '''a'''
      D: '''x'''
      E: All of the above
    explanation: '''r'' mode opens a file for reading.'
    text: Which mode opens a file for reading?
  - answer: B
    choices:
      A: '''r'''
      B: '''w'''
      C: '''a'''
      D: '''x'''
      E: All of the above
    explanation: '''w'' mode opens a file for writing, overwriting existing content.'
    text: Which mode opens a file for writing?
  - answer: B
    choices:
      A: file = open('test.txt'); content = file.read()
      B: 'with open(''test.txt'', ''r'') as file: content = file.read()'
      C: file.read('test.txt')
      D: read('test.txt')
      E: All of the above
    explanation: The 'with' statement ensures the file is properly closed after reading.
    text: What is the correct way to open and read a file?
  - answer: B
    choices:
      A: read()
      B: readlines()
      C: readline()
      D: getlines()
      E: All of the above
    explanation: readlines() returns all lines in a file as a list.
    text: What method is used to read all lines from a file?
  - answer: B
    choices:
      A: print()
      B: write()
      C: output()
      D: save()
      E: All of the above
    explanation: The write() method writes data to a file.
    text: What method is used to write to a file?
  - answer: B
    choices:
      A: A function
      B: A file containing Python code
      C: A variable
      D: A loop
      E: All of the above
    explanation: A module is a file containing Python code that can be imported.
    text: What is a module in Python?
  - answer: B
    choices:
      A: include module_name
      B: import module_name
      C: load module_name
      D: use module_name
      E: All of the above
    explanation: Modules are imported using the 'import' statement.
    text: How do you import a module?
  - answer: B
    choices:
      A: '3'
      B: '3.141592653589793'
      C: Error
      D: None
      E: All of the above
    explanation: math.pi gives the value of pi, approximately 3.141592653589793.
    text: 'What is the output of: import math; print(math.pi)?'
  - answer: B
    choices:
      A: import function from module
      B: from module import function
      C: load function from module
      D: use function from module
      E: All of the above
    explanation: '''from module import function'' imports a specific function.'
    text: How do you import a specific function from a module?
  - answer: B
    choices:
      A: '1'
      B: A random number between 1 and 10
      C: Error
      D: '10'
      E: All of the above
    explanation: randint(1, 10) returns a random integer between 1 and 10.
    text: 'What is the output of: from random import randint; print(randint(1, 10))?'
  - answer: E
    choices:
      A: len()
      B: sum()
      C: max()
      D: min()
      E: All of the above
    explanation: All listed options are built-in Python functions.
    text: Which of the following are built-in Python functions?
    type: multiple
  - answer: E
    choices:
      A: '''r'' (read)'
      B: '''w'' (write)'
      C: '''a'' (append)'
      D: '''x'' (exclusive creation)'
      E: All of the above
    explanation: All listed options are valid file modes in Python.
    text: Which of the following are valid file modes in Python?
    type: multiple
  - answer: B
    choices:
      A: A programming language
      B: A library for numerical computing in Python
      C: A database system
      D: An operating system
      E: All of the above
    explanation: NumPy is a Python library for numerical and scientific computing.
    text: What is NumPy?
  - answer: D
    choices:
      A: import numpy
      B: import numpy as np
      C: from numpy import *
      D: All of the above
    explanation: All these statements are valid ways to import NumPy.
    text: How do you import NumPy?
  - answer: B
    choices:
      A: A normal Python list
      B: A multi-dimensional array object
      C: A function
      D: A variable
      E: All of the above
    explanation: An ndarray is a multi-dimensional array object in NumPy.
    text: What is an ndarray?
  - answer: D
    choices:
      A: array([1, 2, 3])
      B: np.array([1, 2, 3])
      C: numpy.array([1, 2, 3])
      D: All of the above
      E: All of the above
    explanation: All these methods can create a NumPy array from a list.
    text: How do you create a NumPy array from a list?
  - answer: A
    choices:
      A: (3,)
      B: (1, 3)
      C: '3'
      D: Error
      E: All of the above
    explanation: arr.shape returns the dimensions of the array; (3,) means a 1D array
      with 3 elements.
    text: 'What is the output of: import numpy as np; arr = np.array([1, 2, 3]); print(arr.shape)?'
  - answer: E
    choices:
      A: np.array([1, 2, 3])
      B: numpy.array([1, 2, 3])
      C: array([1, 2, 3])
      D: All of the above
      E: All of the above
    explanation: All listed options are valid ways to create a NumPy array.
    text: Which of the following are valid ways to create a NumPy array?
    type: multiple
  - answer: E
    choices:
      A: np.zeros()
      B: np.ones()
      C: np.arange()
      D: np.linspace()
      E: All of the above
    explanation: All listed options are NumPy functions for creating arrays.
    text: Which of the following are NumPy functions for creating arrays?
    type: multiple
  - answer: E
    choices:
      A: Unambiguous
      B: Finite
      C: Well-defined inputs and outputs
      D: Efficient
      E: All of the above
    explanation: All are characteristics of a good algorithm.
    text: Which of the following are valid characteristics of a good algorithm?
    topic: Algorithm
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: List
      B: Tuple
      C: String
      D: Dictionary
      E: All of the above
    explanation: List, tuple, and string are sequence types; dictionary is a mapping
      type.
    text: Which of the following are valid Python sequence data types?
    topic: Python
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: Calculating factorials
      B: Traversing trees
      C: Implementing quicksort
      D: Infinite loops
      E: All of the above
    explanation: A, B, and C are valid; D is not a valid use.
    text: Which of the following are valid uses of recursion in programming?
    topic: Recursion
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: open('file.txt', 'w')
      B: open('file.txt', 'a')
      C: open('file.txt', 'x')
      D: open('file.txt', 'r')
      E: All of the above
    explanation: A, B, and C open for writing; D is for reading.
    text: Which of the following are valid ways to open a file for writing in Python?
    topic: File Processing
    type: multiple
  - answer: E
    choices:
      A: import math
      B: from math import sqrt
      C: import math as m
      D: from math import *
      E: All of the above
    explanation: All are valid import statements.
    text: Which of the following are valid ways to import a module in Python?
    topic: Modules
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: try...except
      B: try...finally
      C: 'with open() as file: ...'
      D: 'if file.exists(): ...'
      E: All of the above
    explanation: A, B, and C are valid; D is not a standard exception handling method.
    text: Which of the following are valid ways to handle exceptions in Python file
      operations?
    topic: File Processing
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: 'lambda x: x + 1'
      B: 'lambda x, y: x * y'
      C: 'def lambda(x): return x + 1'
      D: 'lambda: 42'
      E: All of the above
    explanation: A, B, and D are valid; C is invalid syntax.
    text: Which of the following are valid ways to create a lambda function in Python?
    topic: Functions
    type: multiple
  - answer: E
    choices:
      A: len([1, 2, 3])
      B: sum([1, 2, 3])
      C: max([1, 2, 3])
      D: min([1, 2, 3])
      E: All of the above
    explanation: All are valid uses of built-in functions.
    text: Which of the following are valid ways to use built-in functions in Python?
    topic: Built-in Functions
    type: multiple
  - answer: E
    choices:
      A: Positional arguments
      B: Keyword arguments
      C: '*args'
      D: '**kwargs'
      E: All of the above
    explanation: All are valid ways to pass arguments.
    text: Which of the following are valid ways to pass arguments to a function in
      Python?
    topic: Functions
    type: multiple
  - answer:
    - A
    - B
    choices:
      A: file.close()
      B: 'with open() as file: ...'
      C: os.close(file)
      D: del file
      E: All of the above
    explanation: A and B are valid; C is for file descriptors, D does not guarantee
      closing.
    text: Which of the following are valid ways to close a file in Python?
    topic: File Processing
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: map(str, [1, 2, 3])
      B: 'map(lambda x: x*2, [1, 2, 3])'
      C: list(map(abs, [-1, -2, -3]))
      D: map([1, 2, 3], str)
      E: All of the above
    explanation: A, B, and C are valid; D is invalid argument order.
    text: Which of the following are valid ways to use the map() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: 'filter(lambda x: x > 0, [1, -2, 3])'
      B: list(filter(str.isalpha, ['a', '1', 'b']))
      C: 'filter([1, 2, 3], lambda x: x > 1)'
      D: filter(None, [0, 1, 2])
      E: All of the above
    explanation: A, B, and D are valid; C is invalid argument order.
    text: Which of the following are valid ways to use the filter() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: zip([1, 2], ['a', 'b'])
      B: list(zip([1, 2], [3, 4]))
      C: zip([1, 2, 3])
      D: zip(*[[1, 2], [3, 4]])
      E: All of the above
    explanation: A, B, and D are valid; C requires at least two iterables.
    text: Which of the following are valid ways to use the zip() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer: E
    choices:
      A: enumerate(['a', 'b', 'c'])
      B: list(enumerate(['a', 'b', 'c']))
      C: enumerate(['a', 'b', 'c'], 1)
      D: enumerate(['a', 'b', 'c'], start=1)
      E: All of the above
    explanation: All are valid uses of enumerate.
    text: Which of the following are valid ways to use the enumerate() function in
      Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: sorted([3, 1, 2])
      B: sorted([3, 1, 2], reverse=True)
      C: 'sorted([3, 1, 2], key=lambda x: -x)'
      D: 'sorted([3, 1, 2], cmp=lambda x, y: x-y)'
      E: All of the above
    explanation: A, B, and C are valid; D is not supported in Python 3.
    text: Which of the following are valid ways to use the sorted() function in Python?
    topic: Built-in Functions
    type: multiple
- duration_minutes: 120
  id: 2
  name: Comprehensive Practice Set 2 - Full Module M3-R5 (100 marks)
  questions:
  - answer: A
    choices:
      A: Unambiguous
      B: Infinite loops
      C: Unstructured
      D: Ambiguous
      E: All of the above
    explanation: A good algorithm should be unambiguous, meaning each step is clearly
      defined.
    text: Which of the following is a characteristic of a good algorithm?
  - answer: A
    choices:
      A: Input/Output
      B: Decision
      C: Process
      D: Start/End
      E: All of the above
    explanation: A parallelogram in a flowchart represents input or output operations.
    text: What does a parallelogram represent in a flowchart?
  - answer: A
    choices:
      A: Oval
      B: Rectangle
      C: Diamond
      D: Parallelogram
      E: All of the above
    explanation: An oval symbol is used to indicate the start or end of a flowchart.
    text: Which symbol is used for the start or end in a flowchart?
  - answer: A
    choices:
      A: To visually represent the logic of an algorithm
      B: To write code
      C: To store data
      D: To compile programs
      E: All of the above
    explanation: Flowcharts are used to visually represent the logic and steps of
      an algorithm.
    text: What is the main purpose of a flowchart?
  - answer: C
    choices:
      A: Python
      B: C++
      C: HTML
      D: Java
      E: All of the above
    explanation: HTML is a markup language, not a programming language.
    text: Which of the following is NOT a programming language?
  - answer: A
    choices:
      A: Understanding the problem
      B: Writing code
      C: Testing
      D: Debugging
      E: All of the above
    explanation: The first step in problem solving is to understand the problem before
      attempting a solution.
    text: What is the first step in problem solving?
  - answer: A
    choices:
      A: Diamond
      B: Rectangle
      C: Oval
      D: Parallelogram
      E: All of the above
    explanation: A diamond shape is used to represent a decision in a flowchart.
    text: Which of the following is used to represent a decision in a flowchart?
  - answer: A
    choices:
      A: A storage location for data
      B: A type of operator
      C: A function
      D: A flowchart symbol
      E: All of the above
    explanation: A variable is a storage location for data in programming.
    text: What is a variable in programming?
  - answer: B
    choices:
      A: Testing
      B: Debugging
      C: Implementation
      D: Documentation
      E: All of the above
    explanation: Debugging is not a formal step in the software development life cycle.
    text: Which of the following is NOT a step in the software development life cycle?
  - answer: A
    choices:
      A: '10'
      B: '14'
      C: '12'
      D: '8'
      E: All of the above
    explanation: 2 * 3 + 4 evaluates to 6 + 4, which is 10.
    text: 'What is the output of the following code: print(2 * 3 + 4)?'
  - answer: B
    choices:
      A: 2name
      B: name_2
      C: my-name
      D: class
      E: All of the above
    explanation: '''name_2'' is valid; variable names cannot start with a digit, contain
      hyphens, or be reserved keywords.'
    text: Which of the following is a valid Python variable name?
  - answer: A
    choices:
      A: '2'
      B: '2.5'
      C: '2.0'
      D: '3'
      E: All of the above
    explanation: 5 // 2 performs integer division, resulting in 2.
    text: What is the output of print(5 // 2)?
  - answer: B
    choices:
      A: ^
      B: '**'
      C: pow
      D: exp
      E: All of the above
    explanation: '''**'' is the exponentiation operator in Python.'
    text: Which operator is used for exponentiation in Python?
  - answer: A
    choices:
      A: Python3
      B: Python 3
      C: Python
      D: '3'
      E: All of the above
    explanation: '''Python'' + ''3'' concatenates the two strings, resulting in ''Python3''.'
    text: What is the output of print('Python' + '3')?
  - answer: B
    choices:
      A: List
      B: Tuple
      C: Dictionary
      D: Set
      E: All of the above
    explanation: A tuple is immutable, meaning its contents cannot be changed after
      creation.
    text: Which data structure is immutable in Python?
  - answer: A
    choices:
      A: '5'
      B: '4'
      C: '6'
      D: Error
      E: All of the above
    explanation: len('hello') returns the number of characters, which is 5.
    text: What is the output of len('hello')?
  - answer: A
    choices:
      A: input()
      B: get()
      C: read()
      D: scanf()
      E: All of the above
    explanation: input() reads a line from user input as a string.
    text: Which function is used to get user input in Python?
  - answer: B
    choices:
      A: <class 'int'>
      B: <class 'float'>
      C: <class 'number'>
      D: <class 'decimal'>
      E: All of the above
    explanation: 10.5 is a floating-point number, so its type is float.
    text: What is the output of print(type(10.5))?
  - answer: B
    choices:
      A: Tuple
      B: List
      C: String
      D: Integer
      E: All of the above
    explanation: A list is mutable, meaning its contents can be changed.
    text: Which of the following is a mutable data type in Python?
  - answer: A
    choices:
      A: HELLO
      B: Hello
      C: hello
      D: Error
      E: All of the above
    explanation: The upper() method converts all characters to uppercase.
    text: What is the output of print('hello'.upper())?
  - answer: A
    choices:
      A: +
      B: '&'
      C: .
      D: '|'
      E: All of the above
    explanation: The '+' operator joins two strings together.
    text: Which operator is used for string concatenation?
  - answer: A
    choices:
      A: 'True'
      B: 'False'
      C: '1'
      D: Error
      E: All of the above
    explanation: bool(1) returns True because 1 is considered True in Python.
    text: What is the output of print(bool(1))?
  - answer: A
    choices:
      A: int()
      B: str()
      C: float()
      D: bool()
      E: All of the above
    explanation: int() converts a string or number to an integer.
    text: Which function is used to convert a string to an integer in Python?
  - answer: A
    choices:
      A: '1'
      B: '3'
      C: '0'
      D: '10'
      E: All of the above
    explanation: 10 % 3 gives the remainder of 10 divided by 3, which is 1.
    text: What is the output of print(10 % 3)?
  - answer: A
    choices:
      A: list
      B: array
      C: stack
      D: queue
      E: All of the above
    explanation: '''list'' is a built-in data type in Python.'
    text: Which of the following is a built-in data type in Python?
  - answer: A
    choices:
      A: A reusable block of code
      B: A variable
      C: A data type
      D: A loop
      E: All of the above
    explanation: A function is a reusable block of code that performs a specific task.
    text: What is a function in Python?
  - answer: A
    choices:
      A: def my_function()
      B: function my_function()
      C: create my_function()
      D: func my_function()
      E: All of the above
    explanation: Functions in Python are defined using the 'def' keyword.
    text: How do you define a function in Python?
  - answer: A
    choices:
      A: To send a value back from the function
      B: To end the function
      C: To print output
      D: To create a loop
      E: All of the above
    explanation: The return statement sends a value back from the function to the
      caller.
    text: What is the purpose of the return statement?
  - answer: A
    choices:
      A: A value passed to the function
      B: A variable inside the function
      C: The function name
      D: The return value
      E: All of the above
    explanation: A parameter is a value that is passed to a function when it is called.
    text: What is a parameter in a function?
  - answer: A
    choices:
      A: A parameter with a predefined value
      B: A required parameter
      C: The first parameter
      D: A return value
      E: All of the above
    explanation: A default parameter has a predefined value if no argument is provided.
    text: What is a default parameter?
  - answer: A
    choices:
      A: A function calling itself
      B: A type of loop
      C: A data structure
      D: A variable type
      E: All of the above
    explanation: Recursion is when a function calls itself to solve a problem.
    text: What is recursion?
  - answer: A
    choices:
      A: The condition that stops recursion
      B: The first function call
      C: The return value
      D: The function name
      E: All of the above
    explanation: The base case is the condition that ends the recursive calls.
    text: What is a base case in recursion?
  - answer: A
    choices:
      A: Reading from and writing to files
      B: Creating files
      C: Deleting files
      D: Moving files
      E: All of the above
    explanation: File processing involves reading from and writing to files.
    text: What is file processing?
  - answer: A
    choices:
      A: '''r'''
      B: '''w'''
      C: '''a'''
      D: '''x'''
      E: All of the above
    explanation: The 'r' mode opens a file for reading.
    text: Which mode opens a file for reading?
  - answer: A
    choices:
      A: '''w'''
      B: '''r'''
      C: '''a'''
      D: '''x'''
      E: All of the above
    explanation: The 'w' mode opens a file for writing, overwriting existing content.
    text: Which mode opens a file for writing?
  - answer: A
    choices:
      A: 'with open(''test.txt'', ''r'') as file: content = file.read()'
      B: file = open('test.txt'); content = file.read()
      C: file.read('test.txt')
      D: read('test.txt')
      E: All of the above
    explanation: Using 'with open' is the recommended way to open and read a file
      in Python.
    text: What is the correct way to open and read a file?
  - answer: A
    choices:
      A: readlines()
      B: read()
      C: readline()
      D: getlines()
      E: All of the above
    explanation: The readlines() method reads all lines from a file into a list.
    text: What method is used to read all lines from a file?
  - answer: A
    choices:
      A: write()
      B: print()
      C: output()
      D: save()
      E: All of the above
    explanation: The write() method is used to write data to a file.
    text: What method is used to write to a file?
  - answer: A
    choices:
      A: A file containing Python code
      B: A function
      C: A variable
      D: A loop
      E: All of the above
    explanation: A module is a file containing Python code that can be imported and
      used.
    text: What is a module in Python?
  - answer: A
    choices:
      A: import module_name
      B: include module_name
      C: load module_name
      D: use module_name
      E: All of the above
    explanation: Modules are imported in Python using the 'import' statement.
    text: How do you import a module?
  - answer: A
    choices:
      A: '3.141592653589793'
      B: '3'
      C: Error
      D: None
      E: All of the above
    explanation: math.pi gives the value of pi, approximately 3.141592653589793.
    text: 'What is the output of: import math; print(math.pi)?'
  - answer: A
    choices:
      A: from module import function
      B: import function from module
      C: load function from module
      D: use function from module
      E: All of the above
    explanation: You can import a specific function using 'from module import function'.
    text: How do you import a specific function from a module?
  - answer: A
    choices:
      A: A random number between 1 and 10
      B: '1'
      C: Error
      D: '10'
      E: All of the above
    explanation: randint(1, 10) returns a random integer between 1 and 10 inclusive.
    text: 'What is the output of: from random import randint; print(randint(1, 10))?'
  - answer: B
    choices:
      A: A programming language
      B: A library for numerical computing in Python
      C: A database system
      D: An operating system
      E: All of the above
    explanation: NumPy is a Python library for numerical and scientific computing.
    text: What is NumPy?
  - answer: D
    choices:
      A: import numpy as np
      B: import numpy
      C: from numpy import *
      D: All of the above
      E: All of the above
    explanation: All these statements are valid ways to import NumPy.
    text: How do you import NumPy?
  - answer: B
    choices:
      A: A normal Python list
      B: A multi-dimensional array object
      C: A function
      D: A variable
      E: All of the above
    explanation: An ndarray is a multi-dimensional array object in NumPy.
    text: What is an ndarray?
  - answer: D
    choices:
      A: np.array([1, 2, 3])
      B: array([1, 2, 3])
      C: numpy.array([1, 2, 3])
      D: All of the above
      E: All of the above
    explanation: All these methods can create a NumPy array from a list.
    text: How do you create a NumPy array from a list?
  - answer: A
    choices:
      A: (3,)
      B: (1, 3)
      C: '3'
      D: Error
      E: All of the above
    explanation: arr.shape returns the dimensions of the array; (3,) means a 1D array
      with 3 elements.
    text: 'What is the output of: import numpy as np; arr = np.array([1, 2, 3]); print(arr.shape)?'
  - answer: E
    choices:
      A: np.array([1, 2, 3])
      B: numpy.array([1, 2, 3])
      C: array([1, 2, 3])
      D: All of the above
      E: All of the above
    explanation: All listed options are valid ways to create a NumPy array.
    text: Which of the following are valid ways to create a NumPy array?
    type: multiple
  - answer: E
    choices:
      A: np.zeros()
      B: np.ones()
      C: np.arange()
      D: np.linspace()
      E: All of the above
    explanation: All listed options are NumPy functions for creating arrays.
    text: Which of the following are NumPy functions for creating arrays?
    type: multiple
  - answer: E
    choices:
      A: Unambiguous
      B: Finite
      C: Well-defined inputs and outputs
      D: Efficient
      E: All of the above
    explanation: All are characteristics of a good algorithm.
    text: Which of the following are valid characteristics of a good algorithm?
    topic: Algorithm
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: List
      B: Tuple
      C: String
      D: Dictionary
      E: All of the above
    explanation: List, tuple, and string are sequence types; dictionary is a mapping
      type.
    text: Which of the following are valid Python sequence data types?
    topic: Python
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: Calculating factorials
      B: Traversing trees
      C: Implementing quicksort
      D: Infinite loops
      E: All of the above
    explanation: A, B, and C are valid; D is not a valid use.
    text: Which of the following are valid uses of recursion in programming?
    topic: Recursion
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: open('file.txt', 'w')
      B: open('file.txt', 'a')
      C: open('file.txt', 'x')
      D: open('file.txt', 'r')
      E: All of the above
    explanation: A, B, and C open for writing; D is for reading.
    text: Which of the following are valid ways to open a file for writing in Python?
    topic: File Processing
    type: multiple
  - answer: E
    choices:
      A: import math
      B: from math import sqrt
      C: import math as m
      D: from math import *
      E: All of the above
    explanation: All are valid import statements.
    text: Which of the following are valid ways to import a module in Python?
    topic: Modules
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: try...except
      B: try...finally
      C: 'with open() as file: ...'
      D: 'if file.exists(): ...'
      E: All of the above
    explanation: A, B, and C are valid; D is not a standard exception handling method.
    text: Which of the following are valid ways to handle exceptions in Python file
      operations?
    topic: File Processing
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: 'lambda x: x + 1'
      B: 'lambda x, y: x * y'
      C: 'def lambda(x): return x + 1'
      D: 'lambda: 42'
      E: All of the above
    explanation: A, B, and D are valid; C is invalid syntax.
    text: Which of the following are valid ways to create a lambda function in Python?
    topic: Functions
    type: multiple
  - answer: E
    choices:
      A: len([1, 2, 3])
      B: sum([1, 2, 3])
      C: max([1, 2, 3])
      D: min([1, 2, 3])
      E: All of the above
    explanation: All are valid uses of built-in functions.
    text: Which of the following are valid ways to use built-in functions in Python?
    topic: Built-in Functions
    type: multiple
  - answer: E
    choices:
      A: Positional arguments
      B: Keyword arguments
      C: '*args'
      D: '**kwargs'
      E: All of the above
    explanation: All are valid ways to pass arguments.
    text: Which of the following are valid ways to pass arguments to a function in
      Python?
    topic: Functions
    type: multiple
  - answer:
    - A
    - B
    choices:
      A: file.close()
      B: 'with open() as file: ...'
      C: os.close(file)
      D: del file
      E: All of the above
    explanation: A and B are valid; C is for file descriptors, D does not guarantee
      closing.
    text: Which of the following are valid ways to close a file in Python?
    topic: File Processing
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: map(str, [1, 2, 3])
      B: 'map(lambda x: x*2, [1, 2, 3])'
      C: list(map(abs, [-1, -2, -3]))
      D: map([1, 2, 3], str)
      E: All of the above
    explanation: A, B, and C are valid; D is invalid argument order.
    text: Which of the following are valid ways to use the map() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: 'filter(lambda x: x > 0, [1, -2, 3])'
      B: list(filter(str.isalpha, ['a', '1', 'b']))
      C: 'filter([1, 2, 3], lambda x: x > 1)'
      D: filter(None, [0, 1, 2])
      E: All of the above
    explanation: A, B, and D are valid; C is invalid argument order.
    text: Which of the following are valid ways to use the filter() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - D
    choices:
      A: zip([1, 2], ['a', 'b'])
      B: list(zip([1, 2], [3, 4]))
      C: zip([1, 2, 3])
      D: zip(*[[1, 2], [3, 4]])
      E: All of the above
    explanation: A, B, and D are valid; C requires at least two iterables.
    text: Which of the following are valid ways to use the zip() function in Python?
    topic: Built-in Functions
    type: multiple
  - answer: E
    choices:
      A: enumerate(['a', 'b', 'c'])
      B: list(enumerate(['a', 'b', 'c']))
      C: enumerate(['a', 'b', 'c'], 1)
      D: enumerate(['a', 'b', 'c'], start=1)
      E: All of the above
    explanation: All are valid uses of enumerate.
    text: Which of the following are valid ways to use the enumerate() function in
      Python?
    topic: Built-in Functions
    type: multiple
  - answer:
    - A
    - B
    - C
    choices:
      A: sorted([3, 1, 2])
      B: sorted([3, 1, 2], reverse=True)
      C: 'sorted([3, 1, 2], key=lambda x: -x)'
      D: 'sorted([3, 1, 2], cmp=lambda x, y: x-y)'
      E: All of the above
    explanation: A, B, and C are valid; D is not supported in Python 3.
    text: Which of the following are valid ways to use the sorted() function in Python?
    topic: Built-in Functions
    type: multiple
